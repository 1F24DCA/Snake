apply plugin: 'java'

Project srcProject = project(":network")
String processor = 'kr/pe/firstfloor/annotation/processing/CompileProcessor.java'
Set<String> processorDependencySet = ['kr/pe/firstfloor/annotation/*.java']

// Compile annotation processor
// Source path is srcProject
// Output path is this project
tasks.withType(JavaCompile) {
    source = srcProject.sourceSets.main.java.srcDirs
    classpath = srcProject.sourceSets.main.compileClasspath
    destinationDir = project.sourceSets.main.output.classesDirs[0] // used index 0 for get classesDir in classesDirs array

    Set<String> processorSet = [processor]
    processorSet.addAll(processorDependencySet)

    includes = processorSet
}

// Make resource for notice to compiler find processor easily
tasks.withType(Copy) {
    String processorInfoPath = 'build/resources/main/META-INF/services'
    mkdir processorInfoPath

    File processorInfo = file(processorInfoPath+'/javax.annotation.processing.Processor')
    processorInfo.write(processor.replace("/", ".").replace(".java", "")) // canonical name of processor class

    from processorInfo
    into project.sourceSets.main.output.resourcesDir
}